-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –õ–û–ì–ò–ö–ò –ü–ê–†–°–ò–ù–ì–ê –ò–ú–ï–ù
-- –ü—Ä–æ–±–ª–µ–º–∞: —Å–∏—Å—Ç–µ–º–∞ –ø–∞—Ä—Å–∏—Ç –∫–∞–∫ "–§–∞–º–∏–ª–∏—è –ò–º—è", –∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "–ò–º—è –§–∞–º–∏–ª–∏—è"

-- 1. –°–ù–ê–ß–ê–õ–ê –î–û–ë–ê–í–õ–Ø–ï–ú –ö–û–õ–û–ù–ö–£ is_online (–µ—Å–ª–∏ –µ—ë –Ω–µ—Ç)
ALTER TABLE public.user_profiles 
ADD COLUMN IF NOT EXISTS is_online BOOLEAN DEFAULT false;

UPDATE public.user_profiles 
SET is_online = false 
WHERE is_online IS NULL;

-- 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú –°–£–©–ï–°–¢–í–£–Æ–©–ò–ï –ò–ú–ï–ù–ê
-- –î–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞
UPDATE public.user_profiles 
SET full_name = '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
WHERE email LIKE 'ustinov.artemy%' OR full_name LIKE '%ustinov%' OR full_name LIKE '%artemy%';

UPDATE public.user_profiles 
SET full_name = '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
WHERE email LIKE 'anuitakor%' OR full_name LIKE '%anuitakor%';

UPDATE public.user_profiles 
SET full_name = '–ï–≥–æ—Ä –î–æ–ª–≥–∏—Ö'
WHERE email LIKE 'egordolgih%' OR full_name LIKE '%egordolgih%';

-- 3. –°–û–ó–î–ê–ï–ú –§–£–ù–ö–¶–ò–Æ –î–õ–Ø –ö–†–ê–°–ò–í–û–ì–û –ü–†–ï–û–ë–†–ê–ó–û–í–ê–ù–ò–Ø EMAIL –í –ò–ú–Ø
CREATE OR REPLACE FUNCTION email_to_nice_name(user_email TEXT)
RETURNS TEXT AS $$
BEGIN
    RETURN CASE 
        WHEN user_email LIKE 'ustinov.artemy%' THEN '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
        WHEN user_email LIKE 'anuitakor%' THEN '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
        WHEN user_email LIKE 'egordolgih%' THEN '–ï–≥–æ—Ä –î–æ–ª–≥–∏—Ö'
        -- –û–±—â–∞—è –ª–æ–≥–∏–∫–∞: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º email –≤ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è
        ELSE INITCAP(REPLACE(SPLIT_PART(user_email, '@', 1), '.', ' '))
    END;
END $$ LANGUAGE plpgsql;

-- 4. –û–ë–ù–û–í–õ–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–§–ò–õ–ï–ô
CREATE OR REPLACE FUNCTION create_user_profile_correct_name(user_id UUID)
RETURNS TABLE(success BOOLEAN, message TEXT, profile_data JSONB) AS $$
DECLARE
    user_email TEXT;
    user_name TEXT;
    default_office_id INTEGER;
    new_profile RECORD;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å
    IF EXISTS (SELECT 1 FROM public.user_profiles WHERE id = user_id) THEN
        RETURN QUERY SELECT false, '–ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', NULL::JSONB;
        RETURN;
    END IF;
    
    -- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ auth.users
    SELECT email INTO user_email
    FROM auth.users 
    WHERE id = user_id;
    
    IF user_email IS NULL THEN
        RETURN QUERY SELECT false, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ auth.users', NULL::JSONB;
        RETURN;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è
    user_name := email_to_nice_name(user_email);
    
    -- –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    SELECT id INTO default_office_id 
    FROM public.offices 
    WHERE name = '–†–∞—Å—Å–≤–µ—Ç' 
    LIMIT 1;
    
    IF default_office_id IS NULL THEN
        SELECT id INTO default_office_id 
        FROM public.offices 
        ORDER BY id 
        LIMIT 1;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Ñ–∏—Å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    IF default_office_id IS NULL THEN
        INSERT INTO public.offices (name, description)
        VALUES ('–†–∞—Å—Å–≤–µ—Ç', '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ñ–∏—Å')
        RETURNING id INTO default_office_id;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å–æ –í–°–ï–ú–ò –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
    INSERT INTO public.user_profiles (
        id,
        email,
        full_name,
        position,
        work_schedule,
        work_hours,
        office_id,
        is_admin,
        role,
        admin_role,
        is_active,
        is_online,
        last_seen,
        coins,
        experience,
        level,
        achievements,
        avatar_url,
        created_at,
        updated_at,
        last_activity
    ) VALUES (
        user_id,
        user_email,
        user_name,
        '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
        '5/2',
        9,
        default_office_id,
        false,
        'user',
        'user',
        true,
        false,
        NOW(),
        0,
        0,
        1,
        '[]'::jsonb,
        NULL,
        NOW(),
        NOW(),
        NOW()
    ) RETURNING * INTO new_profile;
    
    RETURN QUERY SELECT 
        true, 
        '–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —Å –∏–º–µ–Ω–µ–º: ' || user_name,
        row_to_json(new_profile)::JSONB;
    
EXCEPTION WHEN OTHERS THEN
    RETURN QUERY SELECT 
        false, 
        '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' || SQLERRM,
        NULL::JSONB;
END $$ LANGUAGE plpgsql;

-- 5. –°–û–ó–î–ê–ï–ú –ü–†–û–§–ò–õ–ò –î–õ–Ø –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ë–ï–ó –ü–†–û–§–ò–õ–ï–ô
DO $$
DECLARE
    user_record RECORD;
BEGIN
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ auth.users –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π
    FOR user_record IN 
        SELECT au.id, au.email
        FROM auth.users au
        LEFT JOIN public.user_profiles up ON up.id = au.id
        WHERE up.id IS NULL
    LOOP
        -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–æ–º–æ—â—å—é –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        PERFORM create_user_profile_correct_name(user_record.id);
        RAISE NOTICE '–°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è: %', user_record.email;
    END LOOP;
END $$;

-- 6. –û–ë–ù–û–í–õ–Ø–ï–ú –¢–†–ò–ì–ì–ï–† –î–õ–Ø –ù–û–í–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
DROP FUNCTION IF EXISTS public.handle_new_user() CASCADE;

CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER
SECURITY DEFINER
SET search_path = public, auth
LANGUAGE plpgsql AS $$
DECLARE
    result_record RECORD;
BEGIN
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    SELECT * INTO result_record 
    FROM create_user_profile_correct_name(NEW.id);
    
    IF result_record.success THEN
        RAISE LOG '–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %: %', NEW.id, result_record.message;
    ELSE
        RAISE WARNING '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è %: %', NEW.id, result_record.message;
    END IF;
    
    RETURN NEW;
    
EXCEPTION WHEN OTHERS THEN
    RAISE WARNING '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ handle_new_user –¥–ª—è %: %', NEW.id, SQLERRM;
    RETURN NEW;
END $$;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW 
    EXECUTE FUNCTION public.handle_new_user();

-- 7. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢–´
SELECT 
    '‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ò–ú–ï–ù–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô' as status,
    id,
    email,
    full_name,
    is_online,
    created_at
FROM public.user_profiles 
ORDER BY created_at DESC;

-- 8. –ò–¢–û–ì–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
SELECT 
    'üéâ –õ–û–ì–ò–ö–ê –ò–ú–ï–ù –ò–°–ü–†–ê–í–õ–ï–ù–ê!' as status,
    '–¢–µ–ø–µ—Ä—å –∏–º–µ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ: –ò–º—è –§–∞–º–∏–ª–∏—è' as message;

SELECT 
    'üîÑ –ò–ù–°–¢–†–£–ö–¶–ò–ò:' as action,
    '1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F5)' as step1,
    '2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ' as step2,
    '3. –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±—É–¥—É—Ç –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏' as step3; 