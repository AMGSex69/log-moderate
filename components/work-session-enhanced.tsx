"use client"

import { useState, useEffect, useRef, useCallback, useMemo } from "react"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import {
	Dialog,
	DialogContent,
	DialogDescription,
	DialogFooter,
	DialogHeader,
	DialogTitle,
} from "@/components/ui/dialog"
import PixelButton from "./pixel-button"
import PixelCard from "./pixel-card"
import { supabase } from "@/lib/supabase"
import { authService } from "@/lib/auth"
import { useAuth } from "@/hooks/use-auth"
import { useToast } from "@/hooks/use-toast"
import { Clock, Play, Pause, LogOut, AlertTriangle, CheckCircle, Users } from "lucide-react"
import { format } from "date-fns"
import { useProfileSync } from "@/lib/profile-sync"

interface WorkSessionData {
	id?: string
	clockInTime: Date | null
	clockOutTime: Date | null
	expectedEndTime: Date | null
	isPaused: boolean
	pauseStartTime: Date | null
	totalWorkMinutes: number
	totalBreakMinutes: number
	overtimeMinutes: number
	isAutoClockOut: boolean
}

interface WorkSessionEnhancedProps {
	onSessionChange: (isWorking: boolean, isPaused?: boolean) => void
	activeTasks?: Array<{ id: number; taskTypeId: number; taskName: string }>
	onForceStopAllTasks?: () => void
}

export default function WorkSessionEnhanced({ onSessionChange, activeTasks = [], onForceStopAllTasks }: WorkSessionEnhancedProps) {
	const { user, profile, refreshProfile } = useAuth()
	const { toast } = useToast()

	// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è
	useProfileSync(user?.id || null, refreshProfile)

	const [sessionData, setSessionData] = useState<WorkSessionData>({
		clockInTime: null,
		clockOutTime: null,
		expectedEndTime: null,
		isPaused: false,
		pauseStartTime: null,
		totalWorkMinutes: 0,
		totalBreakMinutes: 0,
		overtimeMinutes: 0,
		isAutoClockOut: false,
	})

	const [loading, setLoading] = useState(true)
	const [showEndDialog, setShowEndDialog] = useState(false)
	const [showResumeDialog, setShowResumeDialog] = useState(false)
	const [showActiveTasksWarning, setShowActiveTasksWarning] = useState(false)
	const [currentTime, setCurrentTime] = useState(new Date())

	// Refs –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
	const sessionLoadingRef = useRef(false)
	const lastSessionLoad = useRef(0)

	// –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
	useEffect(() => {
		const interval = setInterval(() => {
			setCurrentTime(new Date())
		}, 1000)
		return () => clearInterval(interval)
	}, [])

	// –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤
	const getWorkHours = useCallback(() => {
		if (!profile?.work_schedule) {
			return 9
		}

		const hours = profile.work_schedule === "2/2" ? 12 : 9
		return hours
	}, [profile?.work_schedule])

	// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	useEffect(() => {
		if (user) {
			loadSessionData()
		}
	}, [user])

	// –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≥—Ä–∞—Ñ–∏–∫–∞ —Ä–∞–±–æ—Ç—ã
	useEffect(() => {
		if (sessionData.clockInTime && profile?.work_schedule) {
			const workHours = getWorkHours()
			const newExpectedEnd = new Date(sessionData.clockInTime.getTime() + workHours * 60 * 60 * 1000)

			if (sessionData.expectedEndTime?.getTime() !== newExpectedEnd.getTime()) {
				setSessionData(prev => ({
					...prev,
					expectedEndTime: newExpectedEnd
				}))
			}
		}
	}, [profile?.work_schedule, sessionData.clockInTime, getWorkHours])

	// –ú–µ–º–æ–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–û: —É–±–∏—Ä–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	const loadSessionData = useCallback(async () => {
		if (!user || sessionLoadingRef.current) return

		// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º —á–∞—Å—Ç—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–Ω–µ —á–∞—â–µ —Ä–∞–∑–∞ –≤ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π)
		const now = Date.now()
		if (now - lastSessionLoad.current < 30000) return

		sessionLoadingRef.current = true
		lastSessionLoad.current = now

		try {
			setLoading(true)

			const { employeeId, error: empError } = await authService.getEmployeeId(user.id)
			if (empError || !employeeId) {
				console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è employee_id:", empError)
				return
			}

			const today = new Date().toISOString().split("T")[0]

			const { data: session, error: sessionError } = await supabase
				.from("work_sessions")
				.select("*")
				.eq("employee_id", employeeId)
				.eq("date", today)
				.maybeSingle()

			if (sessionError && sessionError.code !== "PGRST116") {
				console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏:", sessionError)
				throw sessionError
			}

			if (session) {
				const workHours = getWorkHours()
				const expectedEnd = session.clock_in_time
					? new Date(new Date(session.clock_in_time).getTime() + workHours * 60 * 60 * 1000)
					: null

				const newSessionData = {
					id: session.id,
					clockInTime: session.clock_in_time ? new Date(session.clock_in_time) : null,
					clockOutTime: session.clock_out_time ? new Date(session.clock_out_time) : null,
					expectedEndTime: expectedEnd,
					isPaused: session.is_paused || false,
					pauseStartTime: session.pause_start_time ? new Date(session.pause_start_time) : null,
					totalWorkMinutes: session.total_work_minutes || 0,
					totalBreakMinutes: session.total_break_minutes || 0,
					overtimeMinutes: session.overtime_minutes || 0,
					isAutoClockOut: session.is_auto_clocked_out || false,
				}

				setSessionData(newSessionData)

				// –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ —Å—Ç–∞—Ç—É—Å–µ —Ä–∞–±–æ—Ç—ã
				const isWorking = session.clock_in_time && !session.clock_out_time
				onSessionChange(isWorking, session.is_paused || false)
			} else {
				setSessionData({
					clockInTime: null,
					clockOutTime: null,
					expectedEndTime: null,
					isPaused: false,
					pauseStartTime: null,
					totalWorkMinutes: 0,
					totalBreakMinutes: 0,
					overtimeMinutes: 0,
					isAutoClockOut: false,
				})
				onSessionChange(false, false)
			}
		} catch (error) {
			console.error("üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏:", error)
			toast({
				title: "–û—à–∏–±–∫–∞",
				description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—á–µ–π —Å–º–µ–Ω—ã",
				variant: "destructive" as const,
			})
		} finally {
			setLoading(false)
			sessionLoadingRef.current = false
		}
	}, [user, toast])

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –≤—Ä–µ–º–µ–Ω–∏)
	const forceLoadSessionData = useCallback(async () => {
		if (!user || sessionLoadingRef.current) return

		sessionLoadingRef.current = true

		try {
			const { employeeId, error: empError } = await authService.getEmployeeId(user.id)
			if (empError || !employeeId) return

			const today = new Date().toISOString().split("T")[0]

			const { data: session, error: sessionError } = await supabase
				.from("work_sessions")
				.select("*")
				.eq("employee_id", employeeId)
				.eq("date", today)
				.maybeSingle()

			if (sessionError && sessionError.code !== "PGRST116") {
				console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏:", sessionError)
				return
			}

			if (session) {
				const workHours = getWorkHours()
				const expectedEnd = session.clock_in_time
					? new Date(new Date(session.clock_in_time).getTime() + workHours * 60 * 60 * 1000)
					: null

				const newSessionData = {
					id: session.id,
					clockInTime: session.clock_in_time ? new Date(session.clock_in_time) : null,
					clockOutTime: session.clock_out_time ? new Date(session.clock_out_time) : null,
					expectedEndTime: expectedEnd,
					isPaused: session.is_paused || false,
					pauseStartTime: session.pause_start_time ? new Date(session.pause_start_time) : null,
					totalWorkMinutes: session.total_work_minutes || 0,
					totalBreakMinutes: session.total_break_minutes || 0,
					overtimeMinutes: session.overtime_minutes || 0,
					isAutoClockOut: session.is_auto_clocked_out || false,
				}

				setSessionData(newSessionData)
				onSessionChange(session.clock_in_time && !session.clock_out_time, session.is_paused || false)
			} else {
				setSessionData({
					clockInTime: null,
					clockOutTime: null,
					expectedEndTime: null,
					isPaused: false,
					pauseStartTime: null,
					totalWorkMinutes: 0,
					totalBreakMinutes: 0,
					overtimeMinutes: 0,
					isAutoClockOut: false,
				})
				onSessionChange(false, false)
			}
		} catch (error) {
			console.error("üí• –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏–∏:", error)
		} finally {
			sessionLoadingRef.current = false
		}
	}, [user, onSessionChange, toast])

	const handleClockIn = async (confirmed = false) => {
		console.log("üéØ handleClockIn: –ù–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏, confirmed =", confirmed)
		console.log("üéØ handleClockIn: user =", !!user, "profile =", !!profile)

		if (!user || !profile) {
			console.error("‚ùå handleClockIn: –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø—Ä–æ—Ñ–∏–ª—è")
			return
		}

		try {
			console.log("üîç handleClockIn: –ü–æ–ª—É—á–∞–µ–º employeeId –¥–ª—è user:", user.id)
			const { employeeId, error: empError } = await authService.getEmployeeId(user.id)
			console.log("üîç handleClockIn: employeeId =", employeeId, "error =", empError)

			if (empError || !employeeId) {
				console.error("‚ùå handleClockIn: Employee not found", empError)
				throw new Error("Employee not found")
			}

			const now = new Date()

			// –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–µ—Å—Å–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
			console.log("üîç handleClockIn: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é")
			const { data: existingSession, error: checkError } = await supabase
				.from("work_sessions")
				.select("id, clock_out_time, clock_in_time")
				.eq("employee_id", employeeId)
				.eq("date", now.toISOString().split("T")[0])
				.maybeSingle()

			console.log("üìä handleClockIn: existingSession =", existingSession, "checkError =", checkError)

			// –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è —Å–µ—Å—Å–∏—è –∏ –Ω–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥
			if (existingSession?.clock_out_time && !confirmed) {
				console.log("üîÑ handleClockIn: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
				setShowResumeDialog(true)
				return
			}

			const workHours = getWorkHours()
			const expectedEnd = new Date(now.getTime() + workHours * 60 * 60 * 1000)
			console.log("‚è∞ handleClockIn: workHours =", workHours, "expectedEnd =", expectedEnd)

			let sessionData
			if (existingSession) {
				console.log("üîÑ handleClockIn: –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é —Å–µ—Å—Å–∏—é")
				console.log("üìù handleClockIn: –°–µ—Å—Å–∏—è –î–û –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", {
					id: existingSession.id,
					clock_in_time: existingSession.clock_in_time,
					clock_out_time: existingSession.clock_out_time
				})

				// –ï—Å–ª–∏ —Å–µ—Å—Å–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë (–ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞—á–∞–ª–æ –¥–Ω—è)
				const updateData = {
					clock_in_time: now.toISOString(),
					clock_out_time: null, // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è
					start_time: now.toISOString(), // –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Ç—Ä–∏–≥–≥–µ—Ä–æ–º
					end_time: null, // –í–ê–ñ–ù–û: –°–±—Ä–∞—Å—ã–≤–∞–µ–º end_time —á—Ç–æ–±—ã —Ç—Ä–∏–≥–≥–µ—Ä –Ω–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–ª clock_out_time
					expected_end_time: expectedEnd.toISOString(),
					is_paused: false,
					pause_start_time: null,
					// –ü—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
					...(existingSession.clock_out_time ? {} : {
						total_work_minutes: 0,
						total_break_minutes: 0,
						overtime_minutes: 0,
					}),
					is_auto_clocked_out: false,
					updated_at: now.toISOString(),
				}

				console.log("üìù handleClockIn: –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", updateData)

				console.log("üîç handleClockIn: –í—ã–ø–æ–ª–Ω—è–µ–º UPDATE –∑–∞–ø—Ä–æ—Å...")
				const { data, error } = await supabase
					.from("work_sessions")
					.update(updateData)
					.eq("id", existingSession.id)
					.select()
					.single()

				console.log("üìä handleClockIn: –†–µ–∑—É–ª—å—Ç–∞—Ç UPDATE:", { data, error })

				if (error) {
					console.error("‚ùå handleClockIn: –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏", error)
					throw error
				}
				sessionData = data
				console.log("‚úÖ handleClockIn: –°–µ—Å—Å–∏—è –ü–û–°–õ–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", sessionData)
			} else {
				console.log("‚ûï handleClockIn: –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é")
				// –ï—Å–ª–∏ —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é
				const { data, error } = await supabase
					.from("work_sessions")
					.insert({
						employee_id: employeeId,
						date: now.toISOString().split("T")[0],
						clock_in_time: now.toISOString(),
						expected_end_time: expectedEnd.toISOString(),
						is_paused: false,
						total_work_minutes: 0,
						total_break_minutes: 0,
						overtime_minutes: 0,
					})
					.select()
					.single()

				if (error) {
					console.error("‚ùå handleClockIn: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏", error)
					throw error
				}
				sessionData = data
				console.log("‚úÖ handleClockIn: –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞", sessionData)
			}

			// –í–ê–ñ–ù–û: –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
			console.log("üîÑ handleClockIn: –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ")
			const newSessionData: WorkSessionData = {
				id: sessionData.id,
				clockInTime: new Date(sessionData.clock_in_time),
				clockOutTime: sessionData.clock_out_time ? new Date(sessionData.clock_out_time) : null,
				expectedEndTime: expectedEnd,
				isPaused: false,
				pauseStartTime: null,
				totalWorkMinutes: sessionData.total_work_minutes || 0,
				totalBreakMinutes: sessionData.total_break_minutes || 0,
				overtimeMinutes: sessionData.overtime_minutes || 0,
				isAutoClockOut: false,
			}

			setSessionData(newSessionData)
			console.log("‚úÖ handleClockIn: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ", newSessionData)

			// –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ù–ï–ú–ï–î–õ–ï–ù–ù–û
			// console.log("üîÑ handleClockIn: –£–≤–µ–¥–æ–º–ª—è–µ–º –æ —Å–º–µ–Ω–µ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç—ã")
			onSessionChange(true, false)

			// –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω –±—ã–ª –æ—Ç–∫—Ä—ã—Ç
			setShowResumeDialog(false)

			// –°—Ä–∞–∑—É –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á—Ç–æ–±—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –ë–î
			// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –ë–î
			setTimeout(() => {
				forceLoadSessionData().catch(console.error)
			}, 500) // –£–º–µ–Ω—å—à–∏–ª–∏ –∑–∞–¥–µ—Ä–∂–∫—É

			// console.log("‚úÖ handleClockIn: –í—Å—ë —É—Å–ø–µ—à–Ω–æ!")
			const isResuming = existingSession?.clock_out_time
			toast({
				title: isResuming ? "üîÑ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω!" : "üéØ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –Ω–∞—á–∞—Ç!",
				description: isResuming
					? "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞"
					: `–û–∂–∏–¥–∞–µ–º–æ–µ –æ–∫–æ–Ω—á–∞–Ω–∏–µ: ${expectedEnd.toLocaleTimeString()}`,
			})

			// –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞—É–∑—ã
			onSessionChange(true, false)
		} catch (error) {
			console.error("üí• handleClockIn: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:", error)
			toast({
				title: "–û—à–∏–±–∫–∞",
				description: "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å",
				variant: "destructive" as const,
			})
			setShowResumeDialog(false)
		}
	}

	const handleTogglePause = async () => {
		if (!sessionData.id) return

		try {
			const now = new Date()
			const newPausedState = !sessionData.isPaused

			const updateData: any = {
				is_paused: newPausedState,
				updated_at: now.toISOString(),
			}

			if (newPausedState) {
				// –ù–∞—á–∏–Ω–∞–µ–º –ø–∞—É–∑—É
				updateData.pause_start_time = now.toISOString()
			} else {
				// –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º –ø–∞—É–∑—É
				if (sessionData.pauseStartTime) {
					const pauseDuration = Math.floor((now.getTime() - sessionData.pauseStartTime.getTime()) / 60000)
					updateData.total_break_minutes = sessionData.totalBreakMinutes + pauseDuration
				}
				updateData.pause_start_time = null
			}

			const { error } = await supabase.from("work_sessions").update(updateData).eq("id", sessionData.id)

			if (error) throw error

			await forceLoadSessionData()

			toast({
				title: newPausedState ? "‚è∏Ô∏è –†–∞–±–æ—Ç–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" : "‚ñ∂Ô∏è –†–∞–±–æ—Ç–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞",
				description: newPausedState ? "–í—Ä–µ–º—è –ø–∞—É–∑—ã —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ" : "–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É",
			})

			// –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–∞—É–∑—ã
			onSessionChange(true, newPausedState)
		} catch (error) {
			console.error("–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–∞—É–∑—ã:", error)
			toast({
				title: "–û—à–∏–±–∫–∞",
				description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–∞—É–∑—ã",
				variant: "destructive" as const,
			})
		}
	}

	const handleEndDay = async () => {
		if (!sessionData.id) return

		// –ü–†–û–í–ï–†–ö–ê –ê–ö–¢–ò–í–ù–´–• –ó–ê–î–ê–ß
		if (activeTasks && activeTasks.length > 0) {
			setShowActiveTasksWarning(true)
			return
		}

		await performEndDay()
	}

	// –í—ã–¥–µ–ª—è–µ–º –ª–æ–≥–∏–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
	const performEndDay = async () => {
		if (!sessionData.id) return

		try {
			const now = new Date()
			let totalBreakMinutes = sessionData.totalBreakMinutes

			// –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–∞ –ø–∞—É–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–π –ø–∞—É–∑—ã
			if (sessionData.isPaused && sessionData.pauseStartTime) {
				const currentPauseDuration = Math.floor((now.getTime() - sessionData.pauseStartTime.getTime()) / 60000)
				totalBreakMinutes += currentPauseDuration
			}

			// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è
			const totalWorkMinutes = sessionData.clockInTime
				? Math.floor((now.getTime() - sessionData.clockInTime.getTime()) / 60000)
				: 0

			// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è (–±–µ–∑ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤)
			const effectiveWorkMinutes = totalWorkMinutes - totalBreakMinutes

			// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏
			const expectedWorkMinutes = getWorkHours() * 60
			const overtimeMinutes = Math.max(0, effectiveWorkMinutes - expectedWorkMinutes)

			const { error } = await supabase
				.from("work_sessions")
				.update({
					clock_out_time: now.toISOString(),
					total_work_minutes: totalWorkMinutes,
					total_break_minutes: totalBreakMinutes,
					overtime_minutes: overtimeMinutes,
					is_paused: false,
					pause_start_time: null,
					updated_at: now.toISOString(),
				})
				.eq("id", sessionData.id)

			if (error) throw error

			// –û–¢–ö–õ–Æ–ß–ï–ù–û: –£–±–∏—Ä–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ–Ω–ª–∞–π–Ω
			// if (user) {
			//	await authService.updateOnlineStatus(user.id, false)
			// }

			await forceLoadSessionData()
			setShowEndDialog(false)
			setShowActiveTasksWarning(false) // –ó–∞–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è

			toast({
				title: "üèÅ –†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω!",
				description: `–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ: ${Math.floor(effectiveWorkMinutes / 60)}—á ${effectiveWorkMinutes % 60}–º`,
			})
		} catch (error) {
			console.error("–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–º–µ–Ω—ã:", error)
			toast({
				title: "–û—à–∏–±–∫–∞",
				description: "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å",
				variant: "destructive" as const,
			})
		}
	}

	// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å –æ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∑–∞–¥–∞—á
	const handleForceEndWithStopTasks = async () => {
		if (onForceStopAllTasks) {
			onForceStopAllTasks() // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
		}

		// –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ —á—Ç–æ–±—ã –∑–∞–¥–∞—á–∏ —É—Å–ø–µ–ª–∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
		setTimeout(() => {
			performEndDay()
		}, 500)
	}

	const formatTime = (date: Date) => {
		return date.toLocaleTimeString("ru-RU", {
			hour: "2-digit",
			minute: "2-digit",
		})
	}

	const formatDuration = (minutes: number) => {
		const hours = Math.floor(minutes / 60)
		const mins = minutes % 60
		return hours > 0 ? `${hours}—á ${mins}–º` : `${mins}–º`
	}

	const getCurrentWorkTime = () => {
		if (!sessionData.clockInTime || sessionData.clockOutTime) return 0

		let workTime = Math.floor((currentTime.getTime() - sessionData.clockInTime.getTime()) / 60000)

		// –í—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è –ø–µ—Ä–µ—Ä—ã–≤–æ–≤
		workTime -= sessionData.totalBreakMinutes

		// –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–∞ –ø–∞—É–∑–µ, –≤—ã—á–∏—Ç–∞–µ–º –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–π –ø–∞—É–∑—ã
		if (sessionData.isPaused && sessionData.pauseStartTime) {
			const currentPauseDuration = Math.floor((currentTime.getTime() - sessionData.pauseStartTime.getTime()) / 60000)
			workTime -= currentPauseDuration
		}

		return Math.max(0, workTime)
	}

	const getOvertimeMinutes = () => {
		const currentWorkMinutes = getCurrentWorkTime()
		const expectedWorkMinutes = getWorkHours() * 60
		return Math.max(0, currentWorkMinutes - expectedWorkMinutes)
	}

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	const getCurrentBreakTime = () => {
		let totalBreakMinutes = sessionData.totalBreakMinutes

		// –ï—Å–ª–∏ —Å–µ–π—á–∞—Å –Ω–∞ –ø–∞—É–∑–µ, –¥–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ç–µ–∫—É—â–µ–π –ø–∞—É–∑—ã
		if (sessionData.isPaused && sessionData.pauseStartTime) {
			const currentPauseDuration = Math.floor((currentTime.getTime() - sessionData.pauseStartTime.getTime()) / 60000)
			totalBreakMinutes += currentPauseDuration
		}

		return totalBreakMinutes
	}

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
	const getCurrentOvertimeMinutes = () => {
		const currentWorkMinutes = getCurrentWorkTime()
		const expectedWorkMinutes = getWorkHours() * 60
		return Math.max(0, currentWorkMinutes - expectedWorkMinutes)
	}

	// –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–µ–º–æ–∏–∑–∏—Ä—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ isWorking —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
	const isWorking = useMemo(() => {
		const working = !!(sessionData.clockInTime && !sessionData.clockOutTime)
		// –£–±–∏—Ä–∞–µ–º –∏–∑–±—ã—Ç–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å —á–∞—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
		// console.log("üéØ isWorking calculation:", {
		//	clockInTime: !!sessionData.clockInTime,
		//	clockOutTime: !!sessionData.clockOutTime,
		//	isWorking: working
		// })
		return working
	}, [sessionData.clockInTime, sessionData.clockOutTime])

	if (loading) {
		return (
			<PixelCard>
				<div className="p-4 text-center">
					<div className="text-2xl animate-spin mb-2">‚è∞</div>
					<div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
				</div>
			</PixelCard>
		)
	}

	return (
		<div className="space-y-4">
			{/* –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
			<PixelCard>
				<div className="p-4">
					<div className="flex items-center gap-2 mb-4">
						<div className="flex items-center gap-3">
							<div className={`w-3 h-3 rounded-full ${sessionData.isAutoClockOut ? "bg-red-500" : sessionData.clockInTime ? "bg-green-500" : "bg-gray-500"}`} />
							<div>
								<div className="font-bold text-lg">
									{sessionData.clockInTime ? (sessionData.clockOutTime ? "–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω" : "–ù–∞ —Ä–∞–±–æ—Ç–µ") : "–ù–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ"}
								</div>
								<div className="text-sm text-muted-foreground">
									{sessionData.clockInTime
										? sessionData.clockOutTime
											? `–†–∞–±–æ—Ç–∞–ª ${formatDuration(sessionData.totalWorkMinutes)}`
											: `–í —Ä–∞–±–æ—Ç–µ ${formatDuration(getCurrentWorkTime())}`
										: "–í—Ä–µ–º—è –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É"}
								</div>
							</div>
						</div>
					</div>

					{sessionData.clockInTime && sessionData.clockOutTime && (
						<div className="space-y-4">
							<div className="text-center py-3 bg-green-50 rounded-lg border border-green-200">
								<div className="text-green-800 font-semibold">–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–≤–µ—Ä—à–µ–Ω! üéâ</div>
								<div className="text-green-600 text-sm">
									–û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ: {formatDuration(sessionData.totalWorkMinutes)} ‚Ä¢{" "}
									{sessionData.overtimeMinutes > 0 ? `–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞: ${formatDuration(sessionData.overtimeMinutes)}` : "–í –Ω–æ—Ä–º–µ"}
								</div>
							</div>

							<div className="text-center">
								<PixelButton onClick={() => handleClockIn(false)} disabled={loading} className="w-full mb-2" variant="default">
									üîÑ –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å
								</PixelButton>
								<p className="text-sm text-muted-foreground">
									–ü—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è
								</p>
							</div>
						</div>
					)}

					{!sessionData.clockInTime && (
						<div className="text-center py-8">
							<div className="text-4xl mb-3">üè¢</div>
							<PixelButton onClick={() => handleClockIn(false)} disabled={loading} className="w-full mb-2">
								{loading ? "–û—Ç–º–µ—á–∞–µ–º—Å—è..." : "–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å"}
							</PixelButton>
							<p className="text-sm text-muted-foreground">
								–ì—Ä–∞—Ñ–∏–∫: {profile?.work_schedule || "8+1"} ‚Ä¢ {getWorkHours()} —á/–¥–µ–Ω—å
							</p>
						</div>
					)}

					{sessionData.clockInTime && !sessionData.clockOutTime && (
						<div className="space-y-4">
							<div className="grid grid-cols-2 gap-4 text-center">
								<div className="p-3 bg-blue-50 rounded-lg">
									<div className="text-2xl font-bold text-blue-600">{formatTime(new Date(sessionData.clockInTime))}</div>
									<div className="text-xs text-blue-800">–ù–∞—á–∞–ª–æ</div>
								</div>
								<div className="p-3 bg-purple-50 rounded-lg">
									<div className="text-2xl font-bold text-purple-600">
										{sessionData.expectedEndTime ? formatTime(new Date(sessionData.expectedEndTime)) : "‚Äî"}
									</div>
									<div className="text-xs text-purple-800">–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π –∫–æ–Ω–µ—Ü</div>
								</div>
							</div>

							{sessionData.isPaused && (
								<div className="text-center py-3 bg-yellow-50 rounded-lg border border-yellow-200">
									<div className="text-yellow-800 font-semibold">‚è∏Ô∏è –ü–∞—É–∑–∞</div>
									<div className="text-yellow-600 text-sm">
										{sessionData.pauseStartTime && (
											<>–° {formatTime(new Date(sessionData.pauseStartTime))} ‚Ä¢ {formatDuration(sessionData.totalBreakMinutes)} –ø–µ—Ä–µ—Ä—ã–≤</>
										)}
									</div>
								</div>
							)}

							<div className="flex gap-2">
								{!sessionData.isPaused ? (
									<button
										onClick={handleTogglePause}
										className="
											flex-1 font-mono font-black text-black uppercase tracking-wider text-sm
											bg-yellow-300 hover:bg-yellow-400 
											border-4 border-black rounded-none
											shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]
											hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]
											hover:translate-x-[2px] hover:translate-y-[2px]
											transition-all duration-100
											p-3
										"
									>
										‚è∏Ô∏è –ü–ê–£–ó–ê
									</button>
								) : (
									<button
										onClick={handleTogglePause}
										className="
											flex-1 font-mono font-black text-white uppercase tracking-wider text-sm
											bg-green-500 hover:bg-green-600 
											border-4 border-black rounded-none
											shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]
											hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]
											hover:translate-x-[2px] hover:translate-y-[2px]
											transition-all duration-100
											p-3
										"
									>
										‚ñ∂Ô∏è –ü–†–û–î–û–õ–ñ–ò–¢–¨
									</button>
								)}

								<button
									onClick={() => setShowEndDialog(true)}
									className="
										flex-1 font-mono font-black text-white uppercase tracking-wider text-sm
										bg-red-500 hover:bg-red-600 
										border-4 border-black rounded-none
										shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]
										hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]
										hover:translate-x-[2px] hover:translate-y-[2px]
										transition-all duration-100
										p-3
									"
								>
									üèÅ –ó–ê–í–ï–†–®–ò–¢–¨
								</button>
							</div>

							{/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
							<div className="grid grid-cols-3 gap-2 text-xs">
								<div className="text-center p-2 bg-gray-50 rounded">
									<div className="font-bold">{formatDuration(getCurrentWorkTime())}</div>
									<div className="text-muted-foreground">–†–∞–±–æ—Ç—ã</div>
								</div>
								<div className="text-center p-2 bg-gray-50 rounded">
									<div className="font-bold">{formatDuration(getCurrentBreakTime())}</div>
									<div className="text-muted-foreground">–ü–µ—Ä–µ—Ä—ã–≤</div>
								</div>
								<div className="text-center p-2 bg-gray-50 rounded">
									<div className="font-bold text-green-600">
										{getCurrentOvertimeMinutes() > 0 ? `+${formatDuration(getCurrentOvertimeMinutes())}` : "–í –Ω–æ—Ä–º–µ"}
									</div>
									<div className="text-muted-foreground">–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞</div>
								</div>
							</div>
						</div>
					)}
				</div>
			</PixelCard>

			{/* –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
			<Dialog open={showResumeDialog} onOpenChange={setShowResumeDialog}>
				<DialogContent>
					<DialogHeader>
						<DialogTitle className="flex items-center gap-2">
							<Clock className="h-5 w-5 text-blue-500" />
							–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å?
						</DialogTitle>
						<DialogDescription>
							–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å? –ü—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è.
						</DialogDescription>
					</DialogHeader>

					<div className="space-y-4">
						{sessionData.clockOutTime && (
							<div className="p-3 bg-blue-50 border border-blue-200 rounded">
								<div className="text-sm text-blue-800">
									<div className="font-semibold">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–µ—Å—Å–∏–∏:</div>
									<div>‚Ä¢ –û—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ: {formatDuration(sessionData.totalWorkMinutes)}</div>
									<div>‚Ä¢ –ü–µ—Ä–µ—Ä—ã–≤—ã: {formatDuration(sessionData.totalBreakMinutes)}</div>
									{sessionData.overtimeMinutes > 0 && (
										<div>‚Ä¢ –ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞: {formatDuration(sessionData.overtimeMinutes)}</div>
									)}
								</div>
							</div>
						)}

						<div className="p-3 bg-green-50 border border-green-200 rounded">
							<div className="text-sm text-green-800">
								‚úÖ –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ø—Ä–∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
							</div>
						</div>
					</div>

					<DialogFooter>
						<Button variant="outline" onClick={() => setShowResumeDialog(false)}>
							–û—Ç–º–µ–Ω–∞
						</Button>
						<Button onClick={() => handleClockIn(true)} className="bg-blue-600 hover:bg-blue-700">
							<Clock className="h-4 w-4 mr-2" />
							–î–∞, –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
						</Button>
					</DialogFooter>
				</DialogContent>
			</Dialog>

			{/* –î–∏–∞–ª–æ–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–Ω—è */}
			<Dialog open={showEndDialog} onOpenChange={setShowEndDialog}>
				<DialogContent>
					<DialogHeader>
						<DialogTitle className="flex items-center gap-2">
							<AlertTriangle className="h-5 w-5 text-orange-500" />
							–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å?
						</DialogTitle>
						<DialogDescription>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ –¥–Ω—è. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.</DialogDescription>
					</DialogHeader>

					<div className="space-y-4">
						<div className="grid grid-cols-2 gap-4 text-sm">
							<div>
								<div className="text-muted-foreground">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</div>
								<div className="font-bold">{formatDuration(getCurrentWorkTime())}</div>
							</div>
							<div>
								<div className="text-muted-foreground">–ü–µ—Ä–µ—Ä—ã–≤—ã</div>
								<div className="font-bold">{formatDuration(getCurrentBreakTime())}</div>
							</div>
						</div>

						{getCurrentOvertimeMinutes() > 0 && (
							<div className="p-3 bg-orange-50 border border-orange-200 rounded">
								<div className="flex items-center gap-2 text-orange-700">
									<AlertTriangle className="h-4 w-4" />
									<span className="font-medium">–ü–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞: {formatDuration(getCurrentOvertimeMinutes())}</span>
								</div>
							</div>
						)}
					</div>

					<DialogFooter>
						<Button variant="outline" onClick={() => setShowEndDialog(false)}>
							–û—Ç–º–µ–Ω–∞
						</Button>
						<Button onClick={handleEndDay} className="bg-red-600 hover:bg-red-700">
							<CheckCircle className="h-4 w-4 mr-2" />
							–ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–µ–Ω—å
						</Button>
					</DialogFooter>
				</DialogContent>
			</Dialog>

			{/* –î–∏–∞–ª–æ–≥ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–± –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö */}
			<Dialog open={showActiveTasksWarning} onOpenChange={setShowActiveTasksWarning}>
				<DialogContent>
					<DialogHeader>
						<DialogTitle className="flex items-center gap-2">
							<AlertTriangle className="h-5 w-5 text-red-500" />
							–í–Ω–∏–º–∞–Ω–∏–µ! –ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
						</DialogTitle>
						<DialogDescription>
							–£ –≤–∞—Å –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –∏—Ö –∏–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —É—Ç–µ—Ä—è–Ω.
						</DialogDescription>
					</DialogHeader>

					<div className="space-y-4">
						{/* –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á */}
						<div className="p-4 bg-red-50 border border-red-200 rounded">
							<div className="font-medium text-red-800 mb-2">–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏ ({activeTasks.length}):</div>
							<div className="space-y-1">
								{activeTasks.map((task) => (
									<div key={task.taskTypeId} className="text-sm text-red-700">
										‚Ä¢ {task.taskName}
									</div>
								))}
							</div>
						</div>

						<div className="p-3 bg-yellow-50 border border-yellow-200 rounded">
							<div className="text-sm text-yellow-800">
								‚ö†Ô∏è <strong>–í–∞–∂–Ω–æ:</strong> –ï—Å–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏,
								–≤–µ—Å—å –∏—Ö –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω –±–µ–∑ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
							</div>
						</div>

						<div className="p-3 bg-blue-50 border border-blue-200 rounded">
							<div className="text-sm text-blue-800">
								üí° <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</strong> –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏,
								–∞ –∑–∞—Ç–µ–º –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å.
							</div>
						</div>
					</div>

					<DialogFooter className="flex-col sm:flex-row gap-2">
						<Button
							variant="outline"
							onClick={() => setShowActiveTasksWarning(false)}
							className="w-full sm:w-auto"
						>
							–û—Ç–º–µ–Ω–∞
						</Button>
						<Button
							onClick={handleForceEndWithStopTasks}
							className="bg-red-600 hover:bg-red-700 w-full sm:w-auto"
						>
							<AlertTriangle className="h-4 w-4 mr-2" />
							–ó–∞–≤–µ—Ä—à–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å
						</Button>
					</DialogFooter>
				</DialogContent>
			</Dialog>
		</div>
	)
}
