// –°–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∫—É

export interface ProfileUpdateEvent {
	userId: string
	changes: {
		office_id?: number
		admin_role?: string
		work_schedule?: string
		work_hours?: number
		managed_office_id?: number
	}
	timestamp: string
}

class ProfileSyncManager {
	private listeners: Map<string, Set<() => void>> = new Map()

	// –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	subscribe(userId: string, callback: () => void) {
		if (!this.listeners.has(userId)) {
			this.listeners.set(userId, new Set())
		}
		this.listeners.get(userId)!.add(callback)

		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø–∏—Å–∫–∏
		return () => {
			const userListeners = this.listeners.get(userId)
			if (userListeners) {
				userListeners.delete(callback)
				if (userListeners.size === 0) {
					this.listeners.delete(userId)
				}
			}
		}
	}

	// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è
	notifyProfileUpdate(userId: string, changes: ProfileUpdateEvent['changes']) {
		console.log('üì° [PROFILE-SYNC] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', { userId, changes })

		const userListeners = this.listeners.get(userId)
		if (userListeners && userListeners.size > 0) {
			console.log(`üîî [PROFILE-SYNC] –£–≤–µ–¥–æ–º–ª—è–µ–º ${userListeners.size} —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`)
			userListeners.forEach(callback => {
				try {
					callback()
				} catch (error) {
					console.error('‚ùå [PROFILE-SYNC] –û—à–∏–±–∫–∞ –≤ callback:', error)
				}
			})
		} else {
			console.log(`‚ÑπÔ∏è [PROFILE-SYNC] –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`)
		}

		// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
		const event = new CustomEvent('profileUpdated', {
			detail: { userId, changes, timestamp: new Date().toISOString() }
		})
		window.dispatchEvent(event)
	}

	// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—Å–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
	subscribeToAll(callback: (event: ProfileUpdateEvent) => void) {
		const handler = (event: CustomEvent<ProfileUpdateEvent>) => {
			callback(event.detail)
		}

		window.addEventListener('profileUpdated', handler as EventListener)

		return () => {
			window.removeEventListener('profileUpdated', handler as EventListener)
		}
	}

	// –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –ø–æ–¥–ø–∏—Å–æ–∫
	clear() {
		this.listeners.clear()
	}
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
export const profileSyncManager = new ProfileSyncManager()

// –•—É–∫ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
import { useEffect } from 'react'

export function useProfileSync(userId: string | null, onUpdate: () => void) {
	useEffect(() => {
		if (!userId) return

		console.log('üîó [PROFILE-SYNC] –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', userId)
		const unsubscribe = profileSyncManager.subscribe(userId, onUpdate)

		return () => {
			console.log('üîå [PROFILE-SYNC] –û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø—Ä–æ—Ñ–∏–ª—è:', userId)
			unsubscribe()
		}
	}, [userId, onUpdate])
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑ –∞–¥–º–∏–Ω–∫–∏
export function notifyProfileChanged(userId: string, changes: ProfileUpdateEvent['changes']) {
	profileSyncManager.notifyProfileUpdate(userId, changes)
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–µ—à–∞ –ø—Ä–æ—Ñ–∏–ª—è
export function invalidateProfileCache(userId: string) {
	// –£–¥–∞–ª—è–µ–º –∏–∑ –∫–µ—à–∞
	if (typeof window !== 'undefined') {
		try {
			// –û—á–∏—â–∞–µ–º appCache
			const { appCache } = require('@/lib/cache')
			const cacheKeys = ['user_profile', 'current_user', `profile_${userId}`]
			cacheKeys.forEach(key => {
				appCache.delete(key)
			})

			// –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º localStorage –∏ sessionStorage –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
			cacheKeys.forEach(key => {
				localStorage.removeItem(key)
				sessionStorage.removeItem(key)
			})

			console.log('üóëÔ∏è [PROFILE-SYNC] –ö–µ—à –ø—Ä–æ—Ñ–∏–ª—è –æ—á–∏—â–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userId)
		} catch (error) {
			console.warn('‚ö†Ô∏è [PROFILE-SYNC] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–µ—à–∞:', error)
		}
	}
} 