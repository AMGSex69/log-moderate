// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–≥—Ä–æ—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è Task Logger
// –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –Ω–æ–≤—ã–º–∏ –≥—Ä—É–ø–ø–∞–º–∏ –∑–∞–¥–∞—á

export const GAME_CONFIG = {
	// –ù–∞–≥—Ä–∞–¥—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á (–±–∞–∑–æ–≤—ã–µ –±–∞–ª–ª—ã)
	TASK_REWARDS: {
		// –ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è
		'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –û–°–°': 15,
		'–û–±–∑–≤–æ–Ω—ã –ø–æ —Ä–∏—Å–æ–≤–∫–µ': 10,
		'–û—Ç—á–µ—Ç—ã —Ñ–∏–∑–∏–∫–∞–º (+–ø–æ—á—Ç–∞)': 12,
		'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ—Å–æ–≤ (—ç–ª–µ–∫—Ç—Ä–æ–Ω—ã, "–£—á—Ç–µ–Ω –≠–î" –∏ –¥—Ä)': 8,
		'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π': 20,
		'–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –û–°–°': 10,
		'–ü—Ä–æ—Ç–æ–∫–æ–ª—ã –û–°–°': 25,
		'–°–±–æ—Ä —Ñ–∞–∫—Ç—É—Ä—ã –ø–æ –≥–æ–ª–æ—Å–∞–º': 8,
		'–¢–∞–±–ª–∏—Ü—ã –ø–æ —Ä–∏—Å–æ–≤–∫–µ': 6,

		// –†–∞–±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω–∫–æ–π
		'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–∞ –¥–æ–º–æ–≤': 15,
		'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ–±—â–µ–¥–æ–º–æ–≤—ã—Ö —á–∞—Ç–æ–≤': 5,

		// –û–°–° –∏ –û–ø—Ä–æ—Å—ã
		'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —é—Ä–∑–Ω–∞—á–∏–º—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ + –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤': 30,
		'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ–ø—Ä–æ—Å–æ–≤': 8,
		'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –û–°–° –æ—Ç –£–û': 12,
		'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –û–°–° –æ—Ç —Ñ–∏–∑–ª–∏—Ü': 10,
		'–ú–æ–¥–µ—Ä–∞—Ü–∏—è —é—Ä–∑–Ω–∞—á–∏–º—ã—Ö –æ–ø—Ä–æ—Å–æ–≤': 15,
		'–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º –≤ –î–∏—Ä–µ–∫—Ü–∏–∏/–ü—Ä–µ—Ñ–µ–∫—Ç—É—Ä—ã': 20,
		'–°–ø–µ—Ü–æ–ø—Ä–æ—Å—ã': 25,

		// –ü–æ–¥–¥–µ—Ä–∂–∫–∞/–ü—Ä–æ—á–µ–µ
		'–ê–°–ì–£–§': 10,
		'–í–∞–ª–∏–¥–∞—Ü–∏—è': 8,
		'–ó–∞–¥–∞—á–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞': 15,
		'–†–∞–±–æ—Ç–∞ —Å –≤—ã–≥—Ä—É–∑–∫–∞–º–∏': 12,
		'–°–æ–∑–≤–æ–Ω/–æ–±—É—á–µ–Ω–∏–µ': 10,
		'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –û–°–°': 12,

		// –ú–ñ–ò
		'–í–Ω–µ—Å–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π –ú–ñ–ò (–∫–æ–ª-–≤–æ –±–ª–∞–Ω–∫–æ–≤)': 5,  // –∑–∞ –∫–∞–∂–¥—ã–π –±–ª–∞–Ω–∫
		'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –ú–ñ–ò': 15,
		'–†–∞–∑–±–∏–≤–∫–∞ —Ä–µ—à–µ–Ω–∏–π –ú–ñ–ò': 10,

		// –û—Ñ–∏—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏
		'–í—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏': 3,  // –∑–∞ –∫–∞–∂–¥—ã–π –∑–≤–æ–Ω–æ–∫
		'–ö—É—Ä—å–µ—Ä –≠–î (–∫–æ–ª-–≤–æ —Ñ–∏–∑.–õ–∏—Ü)': 2,  // –∑–∞ –∫–∞–∂–¥–æ–µ —Ñ–∏–∑
		'–û–±–∑–≤–æ–Ω—ã': 4,  // –∑–∞ –∫–∞–∂–¥—ã–π –∑–≤–æ–Ω–æ–∫
		'–ü–ª–∞–∫–∞—Ç—ã': 8,
		'–°–∫—Ä–∏–ø—Ç—ã': 12,
		'–†–∞–±–æ—Ç–∞ —Å –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏': 5,

		// –û–±—Ö–æ–¥—ã
		'–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–º–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ö–æ–¥–æ–≤': 8,
		'–û–±—Ö–æ–¥—ã': 25,  // –∑–∞ –∫–∞–∂–¥—ã–π –¥–æ–º
		'–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ö–æ–¥–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞/—Ä–∞–±–æ—Ç–∞ —Å –Ω–∏–º –ø–æ—Å–ª–µ –æ–±—Ö–æ–¥–∞': 15,

		// –°–¢–ü
		'–†–∞–±–æ—Ç–∞ —Å –Ω–µ—Ç–∏–ø–æ–≤—ã–º–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏': 12,
		'–°–¢–ü –æ—Ç–º–µ–Ω–∞ –û–°–°': 10,
		'–°–¢–ü –ø–æ–¥—Å–µ–ª–µ–Ω—Ü—ã': 8,
	} as Record<string, number>,

	// –ì—Ä—É–ø–ø—ã –∑–∞–¥–∞—á —Å —Ü–≤–µ—Ç–æ–≤–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
	TASK_GROUPS: {
		actualization: {
			name: '–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è',
			icon: 'üìù',
			color: '#3B82F6', // blue
			tasks: [
				'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –û–°–°',
				'–û–±–∑–≤–æ–Ω—ã –ø–æ —Ä–∏—Å–æ–≤–∫–µ',
				'–û—Ç—á–µ—Ç—ã —Ñ–∏–∑–∏–∫–∞–º (+–ø–æ—á—Ç–∞)',
				'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ–ª–æ—Å–æ–≤ (—ç–ª–µ–∫—Ç—Ä–æ–Ω—ã, "–£—á—Ç–µ–Ω –≠–î" –∏ –¥—Ä)',
				'–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ä–æ–¥—Å–∫–∏—Ö –ø–æ–º–µ—â–µ–Ω–∏–π',
				'–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –û–°–°',
				'–ü—Ä–æ—Ç–æ–∫–æ–ª—ã –û–°–°',
				'–°–±–æ—Ä —Ñ–∞–∫—Ç—É—Ä—ã –ø–æ –≥–æ–ª–æ—Å–∞–º',
				'–¢–∞–±–ª–∏—Ü—ã –ø–æ —Ä–∏—Å–æ–≤–∫–µ'
			]
		},
		admin_work: {
			name: '–†–∞–±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω–∫–æ–π',
			icon: '‚öôÔ∏è',
			color: '#8B5CF6', // purple
			tasks: [
				'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–∞ –¥–æ–º–æ–≤',
				'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ–±—â–µ–¥–æ–º–æ–≤—ã—Ö —á–∞—Ç–æ–≤'
			]
		},
		oss_surveys: {
			name: '–û–°–° –∏ –û–ø—Ä–æ—Å—ã',
			icon: 'üìä',
			color: '#10B981', // green
			tasks: [
				'–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è —é—Ä–∑–Ω–∞—á–∏–º—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ + –ø—É–±–ª–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤',
				'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ–ø—Ä–æ—Å–æ–≤',
				'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –û–°–° –æ—Ç –£–û',
				'–ú–æ–¥–µ—Ä–∞—Ü–∏—è –û–°–° –æ—Ç —Ñ–∏–∑–ª–∏—Ü',
				'–ú–æ–¥–µ—Ä–∞—Ü–∏—è —é—Ä–∑–Ω–∞—á–∏–º—ã—Ö –æ–ø—Ä–æ—Å–æ–≤',
				'–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º –≤ –î–∏—Ä–µ–∫—Ü–∏–∏/–ü—Ä–µ—Ñ–µ–∫—Ç—É—Ä—ã',
				'–°–ø–µ—Ü–æ–ø—Ä–æ—Å—ã'
			]
		},
		support: {
			name: '–ü–æ–¥–¥–µ—Ä–∂–∫–∞/–ü—Ä–æ—á–µ–µ',
			icon: 'üõ†Ô∏è',
			color: '#6366F1', // indigo
			tasks: [
				'–ê–°–ì–£–§',
				'–í–∞–ª–∏–¥–∞—Ü–∏—è',
				'–ó–∞–¥–∞—á–∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞',
				'–†–∞–±–æ—Ç–∞ —Å –≤—ã–≥—Ä—É–∑–∫–∞–º–∏',
				'–°–æ–∑–≤–æ–Ω/–æ–±—É—á–µ–Ω–∏–µ',
				'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –û–°–°'
			]
		},
		mzhi: {
			name: '–ú–ñ–ò',
			icon: 'üèõÔ∏è',
			color: '#8B5CF6', // violet
			tasks: [
				'–í–Ω–µ—Å–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏–π –ú–ñ–ò (–∫–æ–ª-–≤–æ –±–ª–∞–Ω–∫–æ–≤)',
				'–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –ú–ñ–ò',
				'–†–∞–∑–±–∏–≤–∫–∞ —Ä–µ—à–µ–Ω–∏–π –ú–ñ–ò'
			]
		},
		office: {
			name: '–û—Ñ–∏—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏',
			icon: 'üìû',
			color: '#06B6D4', // cyan
			tasks: [
				'–í—Ö–æ–¥—è—â–∏–µ –∑–≤–æ–Ω–∫–∏',
				'–ö—É—Ä—å–µ—Ä –≠–î (–∫–æ–ª-–≤–æ —Ñ–∏–∑.–õ–∏—Ü)',
				'–û–±–∑–≤–æ–Ω—ã',
				'–ü–ª–∞–∫–∞—Ç—ã',
				'–°–∫—Ä–∏–ø—Ç—ã',
				'–†–∞–±–æ—Ç–∞ —Å –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è–º–∏'
			]
		},
		field_work: {
			name: '–û–±—Ö–æ–¥—ã',
			icon: 'üö∂',
			color: '#059669', // emerald
			tasks: [
				'–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–æ–º–æ–≤ –ø–æ—Å–ª–µ –æ–±—Ö–æ–¥–æ–≤',
				'–û–±—Ö–æ–¥—ã',
				'–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–±—Ö–æ–¥–Ω–æ–≥–æ —Ä–µ–µ—Å—Ç—Ä–∞/—Ä–∞–±–æ—Ç–∞ —Å –Ω–∏–º –ø–æ—Å–ª–µ –æ–±—Ö–æ–¥–∞'
			]
		},
		stp: {
			name: '–°–¢–ü',
			icon: 'üìû',
			color: '#F97316', // orange
			tasks: [
				'–†–∞–±–æ—Ç–∞ —Å –Ω–µ—Ç–∏–ø–æ–≤—ã–º–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏',
				'–°–¢–ü –æ—Ç–º–µ–Ω–∞ –û–°–°',
				'–°–¢–ü –ø–æ–¥—Å–µ–ª–µ–Ω—Ü—ã'
			]
		}
	} as Record<string, {
		name: string
		icon: string
		color: string
		tasks: string[]
	}>,

	// –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —É—Ä–æ–≤–Ω–µ–π (100 —É—Ä–æ–≤–Ω–µ–π —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ–º)
	LEVELS: (() => {
		const levels = []
		let requiredCoins = 0

		for (let level = 1; level <= 100; level++) {
			// –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–∞—è —Ñ–æ—Ä–º—É–ª–∞: –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª—å—à–µ –æ—á–∫–æ–≤
			// 1-10: 50, 100, 200, 350, 550, 800, 1100, 1450, 1850, 2300
			// 11-20: +600, +650, +700... (—É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ 50 –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å)
			// 21-50: –µ—â–µ –±—ã—Å—Ç—Ä–µ–µ
			// 51-100: –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Ç–µ—Ç

			let increment
			if (level <= 10) {
				increment = 50 + (level - 1) * 50 + Math.pow(level - 1, 2) * 25
			} else if (level <= 20) {
				increment = 600 + (level - 11) * 50
			} else if (level <= 50) {
				increment = 1100 + (level - 21) * 100 + Math.pow(level - 21, 2) * 10
			} else if (level <= 80) {
				increment = 5000 + (level - 51) * 200 + Math.pow(level - 51, 2) * 20
			} else {
				increment = 15000 + (level - 81) * 500 + Math.pow(level - 81, 2) * 50
			}

			requiredCoins += increment

			// –ù–∞–∑–≤–∞–Ω–∏—è —É—Ä–æ–≤–Ω–µ–π
			let title, icon
			if (level <= 5) {
				title = `–ù–æ–≤–∏—á–æ–∫ ${level}`
				icon = 'üå±'
			} else if (level <= 10) {
				title = `–°—Ç–∞–∂–µ—Ä ${level - 5}`
				icon = 'üìö'
			} else if (level <= 20) {
				title = `–†–∞–±–æ—Ç–Ω–∏–∫ ${level - 10}`
				icon = 'üíº'
			} else if (level <= 30) {
				title = `–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç ${level - 20}`
				icon = 'üîß'
			} else if (level <= 40) {
				title = `–≠–∫—Å–ø–µ—Ä—Ç ${level - 30}`
				icon = 'üéØ'
			} else if (level <= 50) {
				title = `–ú–∞—Å—Ç–µ—Ä ${level - 40}`
				icon = '‚ö°'
			} else if (level <= 60) {
				title = `–í–∏—Ä—Ç—É–æ–∑ ${level - 50}`
				icon = 'üé®'
			} else if (level <= 70) {
				title = `–ì–µ–Ω–∏–π ${level - 60}`
				icon = 'üß†'
			} else if (level <= 80) {
				title = `–õ–µ–≥–µ–Ω–¥–∞ ${level - 70}`
				icon = 'üèÜ'
			} else if (level <= 90) {
				title = `–¢–∏—Ç–∞–Ω ${level - 80}`
				icon = 'üíé'
			} else {
				title = `–ë–æ–≥ ${level - 90}`
				icon = 'üëë'
			}

			levels.push({
				level,
				min_coins: requiredCoins,
				title,
				icon
			})
		}

		return levels
	})(),

	// –ë–æ–Ω—É—Å—ã –∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã)
	EFFICIENCY_BONUSES: {
		excellent: 2.0,   // –û—Ç–ª–∏—á–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–º–µ–Ω–µ–µ 80% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏)
		good: 1.5,        // –•–æ—Ä–æ—à–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (80-90% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ)
		normal: 1.0,      // –ù–æ—Ä–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (90-110% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ)
		poor: 0.8,        // –ü–ª–æ—Ö–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (110-130% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ)
		bad: 0.5          // –û—á–µ–Ω—å –ø–ª–æ—Ö–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (–±–æ–ª–µ–µ 130% –æ—Ç —Å—Ä–µ–¥–Ω–µ–≥–æ)
	} as Record<string, number>,

	// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –∑–∞–¥–∞—á–∞–º–∏
	MULTITASK_CONFIG: {
		max_concurrent_tasks: 3,           // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
		task_switch_penalty: 0.1,          // –®—Ç—Ä–∞—Ñ –∑–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –∑–∞–¥–∞—á–∞–º–∏ (10%)
		multitask_bonus_threshold: 2,      // –ë–æ–Ω—É—Å –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –Ω–∞–¥ N+ –∑–∞–¥–∞—á–∞–º–∏
		multitask_efficiency_bonus: 1.2,   // –ë–æ–Ω—É—Å –∑–∞ –º–Ω–æ–≥–æ–∑–∞–¥–∞—á–Ω–æ—Å—Ç—å
		idle_task_timeout: 30,             // –í—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π
		heartbeat_interval: 60,            // –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è heartbeat –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
	},

	// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –±–æ–Ω—É—Å—ã –∑–∞ –≥—Ä—É–ø–ø—ã –∑–∞–¥–∞—á
	GROUP_BONUSES: {
		daily_group_completion: 1.5,       // –ë–æ–Ω—É—Å –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –∏–∑ –≤—Å–µ—Ö –≥—Ä—É–ø–ø –∑–∞ –¥–µ–Ω—å
		group_specialist: 1.3,             // –ë–æ–Ω—É—Å –∑–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –Ω–∞ –æ–¥–Ω–æ–π –≥—Ä—É–ø–ø–µ (>70% –∑–∞–¥–∞—á)
		versatile_worker: 1.4,             // –ë–æ–Ω—É—Å –∑–∞ —Ä–∞–±–æ—Ç—É –≤ 5+ –≥—Ä—É–ø–ø–∞—Ö –∑–∞ –Ω–µ–¥–µ–ª—é
	},

	// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
	ACHIEVEMENTS: {
		speed_demon: {
			name: '–°–∫–æ—Ä–æ—Å—Ç–Ω–æ–π –¥–µ–º–æ–Ω',
			description: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ 10 –∑–∞–¥–∞—á –º–µ–Ω–µ–µ —á–µ–º –∑–∞ –ø–æ–ª–æ–≤–∏–Ω—É —Å—Ä–µ–¥–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏',
			badge: '‚ö°',
			points: 200
		},
		multitasker: {
			name: '–ú—É–ª—å—Ç–∏–∑–∞–¥–∞—á–Ω–∏–∫',
			description: '–†–∞–±–æ—Ç–∞–π—Ç–µ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–∞–¥ 3 –∑–∞–¥–∞—á–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ —á–∞—Å–∞',
			badge: 'üéØ',
			points: 150
		},
		thousand_club: {
			name: '–ö–ª—É–± —Ç—ã—Å—è—á–∏',
			description: '–ù–∞–±–µ—Ä–∏—Ç–µ 1000 –æ—á–∫–æ–≤',
			badge: 'üí∞',
			points: 100
		},
		night_owl: {
			name: '–ü–æ–ª—É–Ω–æ—á–Ω–∏–∫',
			description: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ 20 –∑–∞–¥–∞—á –ø–æ—Å–ª–µ 18:00',
			badge: 'üåô',
			points: 100
		},
		early_bird: {
			name: '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫',
			description: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ 20 –∑–∞–¥–∞—á –¥–æ 10:00',
			badge: 'üåÖ',
			points: 100
		},
		group_master: {
			name: '–ú–∞—Å—Ç–µ—Ä –≥—Ä—É–ø–ø—ã',
			description: '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –ø–æ 10 –∑–∞–¥–∞—á –≤ –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø–µ',
			badge: 'üëë',
			points: 300
		},
		efficiency_king: {
			name: '–ö–æ—Ä–æ–ª—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
			description: '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤—ã—à–µ 1.8 –Ω–µ–¥–µ–ª—é',
			badge: 'üèÜ',
			points: 400
		}
	}
}

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
export function getTaskGroup(taskName: string): string | null {
	for (const [groupKey, group] of Object.entries(GAME_CONFIG.TASK_GROUPS)) {
		if (group.tasks.includes(taskName)) {
			return groupKey
		}
	}
	return null
}

export function getTaskGroupName(taskName: string): string {
	const groupKey = getTaskGroup(taskName)
	return groupKey ? GAME_CONFIG.TASK_GROUPS[groupKey].name : '–ü—Ä–æ—á–µ–µ'
}

export function getTaskGroupColor(taskName: string): string {
	const groupKey = getTaskGroup(taskName)
	return groupKey ? GAME_CONFIG.TASK_GROUPS[groupKey].color : '#6B7280'
}

export function calculateTaskReward(taskName: string, unitsCompleted: number, timeSpent: number, averageTime?: number): number {
	const baseReward = GAME_CONFIG.TASK_REWARDS[taskName] || 5
	let totalReward = baseReward * unitsCompleted

	// –ü—Ä–∏–º–µ–Ω—è–µ–º –±–æ–Ω—É—Å –∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ä–µ–¥–Ω–∏–π –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å
	if (averageTime && averageTime > 0) {
		const efficiency = averageTime / (timeSpent / unitsCompleted)
		let efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.normal

		if (efficiency >= 1.25) efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.excellent
		else if (efficiency >= 1.11) efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.good
		else if (efficiency >= 0.91) efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.normal
		else if (efficiency >= 0.77) efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.poor
		else efficiencyBonus = GAME_CONFIG.EFFICIENCY_BONUSES.bad

		totalReward *= efficiencyBonus
	}

	return Math.round(totalReward)
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —É—Ä–æ–≤–Ω—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞)
export function calculateLevel(coins: number): { level: number; name: string; icon: string; minCoins: number } {
	const levels = GAME_CONFIG.LEVELS

	// –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —É—Ä–æ–≤–µ–Ω—å (–∏–¥–µ–º —Å –∫–æ–Ω—Ü–∞)
	for (let i = levels.length - 1; i >= 0; i--) {
		if (coins >= levels[i].min_coins) {
			return {
				level: levels[i].level,
				name: levels[i].title,
				icon: levels[i].icon,
				minCoins: levels[i].min_coins
			}
		}
	}

	// –ï—Å–ª–∏ –æ—á–∫–æ–≤ –º–µ–Ω—å—à–µ, —á–µ–º –¥–ª—è 1 —É—Ä–æ–≤–Ω—è
	return { level: 0, name: '–ù–æ–≤–∏—á–æ–∫', icon: 'üå±', minCoins: 0 }
}

export function getNextLevel(coins: number): { level: number; threshold: number; name: string; minCoins: number; icon: string } | null {
	const levels = GAME_CONFIG.LEVELS

	// –ò—â–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–≤–µ–Ω—å
	for (const levelData of levels) {
		if (coins < levelData.min_coins) {
			return {
				level: levelData.level,
				threshold: levelData.min_coins,
				name: levelData.title,
				minCoins: levelData.min_coins,
				icon: levelData.icon
			}
		}
	}

	// –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç
	return null
}

export default GAME_CONFIG
