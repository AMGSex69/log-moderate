-- –§–ò–ù–ê–õ–¨–ù–û–ï –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –í–°–ï–• –ü–†–û–ë–õ–ï–ú
-- –†–µ—à–∞–µ—Ç: 400 –æ—à–∏–±–∫–∏, –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∏–º–µ–Ω–∞, –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏

-- –®–ê–ì 1: –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â—É—é –∫–æ–ª–æ–Ω–∫—É is_online
ALTER TABLE public.user_profiles 
ADD COLUMN IF NOT EXISTS is_online BOOLEAN DEFAULT false;

UPDATE public.user_profiles 
SET is_online = false 
WHERE is_online IS NULL;

-- –®–ê–ì 2: –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∏–º–µ–Ω–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ (–ò–º—è –§–∞–º–∏–ª–∏—è)
UPDATE public.user_profiles 
SET full_name = '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
WHERE email LIKE 'ustinov.artemy%' OR full_name LIKE '%ustinov%' OR full_name LIKE '%artemy%';

UPDATE public.user_profiles 
SET full_name = '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
WHERE email LIKE 'anuitakor%' OR full_name LIKE '%anuitakor%';

UPDATE public.user_profiles 
SET full_name = '–ï–≥–æ—Ä –î–æ–ª–≥–∏—Ö'
WHERE email LIKE 'egordolgih%' OR full_name LIKE '%egordolgih%';

-- –®–ê–ì 3: –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è email –≤ –∏–º—è
CREATE OR REPLACE FUNCTION email_to_nice_name(user_email TEXT)
RETURNS TEXT AS $$
BEGIN
    RETURN CASE 
        WHEN user_email LIKE 'ustinov.artemy%' THEN '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
        WHEN user_email LIKE 'anuitakor%' THEN '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
        WHEN user_email LIKE 'egordolgih%' THEN '–ï–≥–æ—Ä –î–æ–ª–≥–∏—Ö'
        -- –û–±—â–∞—è –ª–æ–≥–∏–∫–∞: –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º email –≤ –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è (–ò–º—è –§–∞–º–∏–ª–∏—è)
        ELSE INITCAP(REPLACE(SPLIT_PART(user_email, '@', 1), '.', ' '))
    END;
END $$ LANGUAGE plpgsql;

-- –®–ê–ì 4: –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π
DO $$
DECLARE
    user_record RECORD;
    default_office_id INTEGER;
    user_name TEXT;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    SELECT id INTO default_office_id 
    FROM public.offices 
    WHERE name = '–†–∞—Å—Å–≤–µ—Ç' 
    LIMIT 1;
    
    IF default_office_id IS NULL THEN
        SELECT id INTO default_office_id 
        FROM public.offices 
        ORDER BY id 
        LIMIT 1;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Ñ–∏—Å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    IF default_office_id IS NULL THEN
        INSERT INTO public.offices (name, description)
        VALUES ('–†–∞—Å—Å–≤–µ—Ç', '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ñ–∏—Å')
        RETURNING id INTO default_office_id;
    END IF;
    
    -- –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∏–∑ auth.users –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π
    FOR user_record IN 
        SELECT au.id, au.email
        FROM auth.users au
        LEFT JOIN public.user_profiles up ON up.id = au.id
        WHERE up.id IS NULL
    LOOP
        -- –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è
        user_name := email_to_nice_name(user_record.email);
        
        -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        INSERT INTO public.user_profiles (
            id,
            email,
            full_name,
            position,
            work_schedule,
            work_hours,
            office_id,
            is_admin,
            role,
            admin_role,
            is_active,
            is_online,
            coins,
            experience,
            level,
            achievements,
            created_at,
            updated_at,
            last_activity
        ) VALUES (
            user_record.id,
            user_record.email,
            user_name,
            '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
            '5/2',
            9,
            default_office_id,
            false,
            'user',
            'user',
            true,
            false,
            0,
            0,
            1,
            '[]'::jsonb,
            NOW(),
            NOW(),
            NOW()
        ) ON CONFLICT (id) DO UPDATE SET
            full_name = EXCLUDED.full_name,
            is_online = false,
            updated_at = NOW();
            
        RAISE NOTICE '–°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è: % (%)', user_name, user_record.email;
    END LOOP;
END $$;

-- –®–ê–ì 5: –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
DROP FUNCTION IF EXISTS public.handle_new_user() CASCADE;

CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER
SECURITY DEFINER
SET search_path = public, auth
LANGUAGE plpgsql AS $$
DECLARE
    user_email TEXT;
    user_name TEXT;
    default_office_id INTEGER;
BEGIN
    -- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ auth.users
    user_email := COALESCE(NEW.email, 'user@example.com');
    user_name := email_to_nice_name(user_email);
    
    -- –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    SELECT id INTO default_office_id 
    FROM public.offices 
    WHERE name = '–†–∞—Å—Å–≤–µ—Ç' 
    LIMIT 1;
    
    IF default_office_id IS NULL THEN
        SELECT id INTO default_office_id 
        FROM public.offices 
        ORDER BY id 
        LIMIT 1;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Ñ–∏—Å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    IF default_office_id IS NULL THEN
        INSERT INTO public.offices (name, description)
        VALUES ('–†–∞—Å—Å–≤–µ—Ç', '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ñ–∏—Å')
        RETURNING id INTO default_office_id;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
    INSERT INTO public.user_profiles (
        id,
        email,
        full_name,
        position,
        work_schedule,
        work_hours,
        office_id,
        is_admin,
        role,
        admin_role,
        is_active,
        is_online,
        coins,
        experience,
        level,
        achievements,
        created_at,
        updated_at,
        last_activity
    ) VALUES (
        NEW.id,
        user_email,
        user_name,
        '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
        '5/2',
        9,
        default_office_id,
        false,
        'user',
        'user',
        true,
        false,
        0,
        0,
        1,
        '[]'::jsonb,
        NOW(),
        NOW(),
        NOW()
    ) ON CONFLICT (id) DO NOTHING;
    
    RETURN NEW;
    
EXCEPTION WHEN OTHERS THEN
    RAISE WARNING '–û—à–∏–±–∫–∞ –≤ handle_new_user –¥–ª—è %: %', NEW.id, SQLERRM;
    RETURN NEW;
END $$;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW 
    EXECUTE FUNCTION public.handle_new_user();

-- –®–ê–ì 6: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
SELECT 
    '‚úÖ –§–ò–ù–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´' as status,
    COUNT(*) as total_profiles,
    COUNT(CASE WHEN is_online IS NOT NULL THEN 1 END) as profiles_with_is_online,
    COUNT(CASE WHEN full_name NOT LIKE '%.%' THEN 1 END) as profiles_with_nice_names
FROM public.user_profiles;

-- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏
SELECT 
    'üéØ –ü–û–°–õ–ï–î–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ü–†–û–§–ò–õ–ò' as info,
    id,
    email,
    full_name,
    is_online,
    position,
    office_id,
    created_at
FROM public.user_profiles 
ORDER BY updated_at DESC
LIMIT 5;

-- –®–ê–ì 7: –ò—Ç–æ–≥–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
SELECT 
    'üéâ –í–°–ï –ü–†–û–ë–õ–ï–ú–´ –ò–°–ü–†–ê–í–õ–ï–ù–´!' as status,
    '–ö–æ–ª–æ–Ω–∫–∞ is_online –¥–æ–±–∞–≤–ª–µ–Ω–∞, –∏–º–µ–Ω–∞ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –ø—Ä–æ—Ñ–∏–ª–∏ —Å–æ–∑–¥–∞–Ω—ã' as message;

SELECT 
    'üîÑ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:' as action,
    '1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F5)' as step1,
    '2. –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞ (Ctrl+Shift+Del)' as step2,
    '3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É —Å–Ω–æ–≤–∞' as step3,
    '4. –¢–µ–ø–µ—Ä—å –∏–º–µ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ "–ò–º—è –§–∞–º–∏–ª–∏—è"' as step4; 