-- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø –ò–ú–ï–ù –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
-- –ü—Ä–æ–±–ª–µ–º–∞: –∏–º–µ–Ω–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –∫–∞–∫ "ustinov.artemy" –≤–º–µ—Å—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω—ã—Ö –∏–º–µ–Ω

-- 1. –ü–†–û–í–ï–†–Ø–ï–ú –¢–ï–ö–£–©–ò–ï –ò–ú–ï–ù–ê
SELECT 
    'üîç –¢–ï–ö–£–©–ò–ï –ò–ú–ï–ù–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô' as info,
    id,
    email,
    full_name,
    created_at
FROM public.user_profiles 
ORDER BY created_at DESC;

-- 2. –ò–°–ü–†–ê–í–õ–Ø–ï–ú –ò–ú–ï–ù–ê –î–õ–Ø –ö–û–ù–ö–†–ï–¢–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
-- –ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤
UPDATE public.user_profiles 
SET full_name = '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
WHERE email LIKE 'ustinov.artemy%' OR full_name LIKE 'ustinov.artemy%';

-- –ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞  
UPDATE public.user_profiles 
SET full_name = '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
WHERE email LIKE 'anuitakor%' OR full_name LIKE 'anuitakor%';

-- –¢–∞–Ω—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
UPDATE public.user_profiles 
SET full_name = '–¢–∞—Ç—å—è–Ω–∞'
WHERE id = 'ca465c0e-6317-4666-b277-b45f9cbeedae';

-- 3. –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–õ–Ø –í–°–ï–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –° –ò–ú–ï–ù–ê–ú–ò –¢–ò–ü–ê EMAIL
UPDATE public.user_profiles 
SET full_name = CASE 
    -- –ï—Å–ª–∏ –∏–º—è —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É, —Ç–æ —ç—Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ email-—Ñ–æ—Ä–º–∞—Ç
    WHEN full_name LIKE '%.%' AND full_name NOT LIKE '% %' THEN
        -- –ü—ã—Ç–∞–µ–º—Å—è –∫—Ä–∞—Å–∏–≤–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å
        CASE 
            WHEN full_name LIKE 'ustinov.artemy%' THEN '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
            WHEN full_name LIKE 'anuitakor%' THEN '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
            ELSE INITCAP(REPLACE(full_name, '.', ' '))
        END
    ELSE full_name
END
WHERE full_name LIKE '%.%' AND full_name NOT LIKE '% %';

-- 4. –û–ë–ù–û–í–õ–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–§–ò–õ–ï–ô –î–õ–Ø –ë–£–î–£–©–ò–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô
CREATE OR REPLACE FUNCTION create_user_profile_with_proper_name(user_id UUID)
RETURNS TABLE(success BOOLEAN, message TEXT, profile_data JSONB) AS $$
DECLARE
    user_email TEXT;
    user_name TEXT;
    default_office_id INTEGER;
    new_profile RECORD;
BEGIN
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å
    IF EXISTS (SELECT 1 FROM public.user_profiles WHERE id = user_id) THEN
        RETURN QUERY SELECT false, '–ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç', NULL::JSONB;
        RETURN;
    END IF;
    
    -- –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ auth.users
    SELECT email INTO user_email
    FROM auth.users 
    WHERE id = user_id;
    
    IF user_email IS NULL THEN
        RETURN QUERY SELECT false, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ auth.users', NULL::JSONB;
        RETURN;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∏–º—è –∏–∑ email
    user_name := CASE 
        WHEN user_email LIKE 'ustinov.artemy%' THEN '–ê—Ä—Ç—ë–º –£—Å—Ç–∏–Ω–æ–≤'
        WHEN user_email LIKE 'anuitakor%' THEN '–ê–Ω–Ω–∞ –ö–æ—Ä–∞–±–µ–ª—å–Ω–∏–∫–æ–≤–∞'
        WHEN user_email LIKE 'egordolgih%' THEN '–ï–≥–æ—Ä –î–æ–ª–≥–∏—Ö'
        ELSE 
            -- –û–±—â–∞—è –ª–æ–≥–∏–∫–∞: –±–µ—Ä–µ–º —á–∞—Å—Ç—å –¥–æ @, –∑–∞–º–µ–Ω—è–µ–º —Ç–æ—á–∫–∏ –Ω–∞ –ø—Ä–æ–±–µ–ª—ã, –¥–µ–ª–∞–µ–º –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏
            INITCAP(REPLACE(SPLIT_PART(user_email, '@', 1), '.', ' '))
    END;
    
    -- –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–∏—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    SELECT id INTO default_office_id 
    FROM public.offices 
    WHERE name = '–†–∞—Å—Å–≤–µ—Ç' 
    LIMIT 1;
    
    IF default_office_id IS NULL THEN
        SELECT id INTO default_office_id 
        FROM public.offices 
        ORDER BY id 
        LIMIT 1;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –æ—Ñ–∏—Å –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    IF default_office_id IS NULL THEN
        INSERT INTO public.offices (name, description)
        VALUES ('–†–∞—Å—Å–≤–µ—Ç', '–û—Å–Ω–æ–≤–Ω–æ–π –æ—Ñ–∏—Å')
        RETURNING id INTO default_office_id;
    END IF;
    
    -- –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å —Å–æ –í–°–ï–ú–ò –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏
    INSERT INTO public.user_profiles (
        id,
        email,
        full_name,
        position,
        work_schedule,
        work_hours,
        office_id,
        is_admin,
        role,
        admin_role,
        is_active,
        is_online,
        last_seen,
        coins,
        experience,
        level,
        achievements,
        avatar_url,
        created_at,
        updated_at,
        last_activity
    ) VALUES (
        user_id,
        user_email,
        user_name,
        '–°–æ—Ç—Ä—É–¥–Ω–∏–∫',
        '5/2',
        9,
        default_office_id,
        false,
        'user',
        'user',
        true,
        false,
        NOW(),
        0,
        0,
        1,
        '[]'::jsonb,
        NULL,
        NOW(),
        NOW(),
        NOW()
    ) RETURNING * INTO new_profile;
    
    RETURN QUERY SELECT 
        true, 
        '–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —Å –∫—Ä–∞—Å–∏–≤—ã–º –∏–º–µ–Ω–µ–º: ' || user_name,
        row_to_json(new_profile)::JSONB;
    
EXCEPTION WHEN OTHERS THEN
    RETURN QUERY SELECT 
        false, 
        '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ' || SQLERRM,
        NULL::JSONB;
END $$ LANGUAGE plpgsql;

-- 5. –û–ë–ù–û–í–õ–Ø–ï–ú –¢–†–ò–ì–ì–ï–†
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
DROP FUNCTION IF EXISTS public.handle_new_user() CASCADE;

CREATE OR REPLACE FUNCTION public.handle_new_user()
RETURNS TRIGGER
SECURITY DEFINER
SET search_path = public, auth
LANGUAGE plpgsql AS $$
DECLARE
    result_record RECORD;
BEGIN
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –∏–º–µ–Ω–∞–º–∏
    SELECT * INTO result_record 
    FROM create_user_profile_with_proper_name(NEW.id);
    
    IF result_record.success THEN
        RAISE LOG '–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %: %', NEW.id, result_record.message;
    ELSE
        RAISE WARNING '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è %: %', NEW.id, result_record.message;
    END IF;
    
    RETURN NEW;
    
EXCEPTION WHEN OTHERS THEN
    RAISE WARNING '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ handle_new_user –¥–ª—è %: %', NEW.id, SQLERRM;
    RETURN NEW;
END $$;

-- –°–æ–∑–¥–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä
CREATE TRIGGER on_auth_user_created
    AFTER INSERT ON auth.users
    FOR EACH ROW 
    EXECUTE FUNCTION public.handle_new_user();

-- 6. –ü–†–û–í–ï–†–Ø–ï–ú –†–ï–ó–£–õ–¨–¢–ê–¢–´
SELECT 
    '‚úÖ –û–ë–ù–û–í–õ–ï–ù–ù–´–ï –ò–ú–ï–ù–ê' as status,
    id,
    email,
    full_name,
    position,
    office_id,
    created_at
FROM public.user_profiles 
ORDER BY created_at DESC;

-- 7. –ò–¢–û–ì–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï
SELECT 
    'üéâ –ò–ú–ï–ù–ê –ò–°–ü–†–ê–í–õ–ï–ù–´!' as status,
    '–¢–µ–ø–µ—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –∫—Ä–∞—Å–∏–≤—ã–µ –∏–º–µ–Ω–∞ –≤–º–µ—Å—Ç–æ email-–∞–¥—Ä–µ—Å–æ–≤' as message;

SELECT 
    'üîÑ –ò–ù–°–¢–†–£–ö–¶–ò–ò:' as action,
    '1. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (F5)' as step1,
    '2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–Ω –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ' as step2,
    '3. –ï—Å–ª–∏ –Ω—É–∂–Ω–æ - –∏—Å–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–∞ –≤—Ä—É—á–Ω—É—é –≤ –ø—Ä–æ—Ñ–∏–ª–µ' as step3; 